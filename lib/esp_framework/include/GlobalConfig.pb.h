/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.4 at Sat Feb 15 11:23:30 2020. */

#ifndef PB_GLOBALCONFIG_PB_H_INCLUDED
#define PB_GLOBALCONFIG_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _DebugConfigMessage {
    uint8_t type;
    char server[40];
    uint16_t port;
/* @@protoc_insertion_point(struct:DebugConfigMessage) */
} DebugConfigMessage;

typedef struct _HttpConfigMessage {
    uint16_t port;
    char user[15];
    char pass[15];
    char ota_url[150];
/* @@protoc_insertion_point(struct:HttpConfigMessage) */
} HttpConfigMessage;

typedef struct _MqttConfigMessage {
    char server[30];
    uint16_t port;
    char user[20];
    char pass[30];
    bool retain;
    char topic[50];
    bool discovery;
    char discovery_prefix[30];
    uint16_t interval;
/* @@protoc_insertion_point(struct:MqttConfigMessage) */
} MqttConfigMessage;

typedef struct _WifiConfigMessage {
    char ssid[20];
    char pass[30];
    bool is_static;
    char ip[15];
    char sn[15];
    char gw[15];
    char ntp[40];
/* @@protoc_insertion_point(struct:WifiConfigMessage) */
} WifiConfigMessage;

typedef PB_BYTES_ARRAY_T(500) GlobalConfigMessage_module_cfg_t;
typedef struct _GlobalConfigMessage {
    WifiConfigMessage wifi;
    HttpConfigMessage http;
    MqttConfigMessage mqtt;
    DebugConfigMessage debug;
    uint16_t cfg_version;
    uint16_t module_crc;
    GlobalConfigMessage_module_cfg_t module_cfg;
    char uid[20];
/* @@protoc_insertion_point(struct:GlobalConfigMessage) */
} GlobalConfigMessage;


/* Struct field encoding specification for nanopb */
extern const pb_field_t GlobalConfigMessage_fields[9];
extern const pb_field_t WifiConfigMessage_fields[8];
extern const pb_field_t HttpConfigMessage_fields[5];
extern const pb_field_t MqttConfigMessage_fields[10];
extern const pb_field_t DebugConfigMessage_fields[4];

/* Maximum encoded size of messages (where known) */
#define GlobalConfigMessage_size                 1130

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define GLOBALCONFIG_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
