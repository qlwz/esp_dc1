/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.4 at Wed Feb 19 10:49:10 2020. */

#ifndef PB_DC1CONFIG_PB_H_INCLUDED
#define PB_DC1CONFIG_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _DC1ConfigMessage {
    uint8_t last_state;
    uint8_t power_on_state;
    uint8_t power_mode;
    uint8_t logo_led;
    uint8_t wifi_led;
    uint8_t sub_kinkage;
    uint16_t report_interval;
    uint16_t energy_power_delta;
    uint64_t energy_power_calibration;
    uint64_t energy_voltage_calibration;
    uint64_t energy_current_calibration;
    uint64_t energy_kWhtoday;
    uint64_t energy_kWhyesterday;
    uint64_t energy_kWhtotal;
    uint16_t energy_kWhdoy;
    uint32_t energy_kWhtotal_time;
    uint16_t energy_max_power;
/* @@protoc_insertion_point(struct:DC1ConfigMessage) */
} DC1ConfigMessage;

/* Struct field encoding specification for nanopb */
extern const pb_field_t DC1ConfigMessage_fields[18];

/* Maximum encoded size of messages (where known) */
#define DC1ConfigMessage_size                    113

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define DC1CONFIG_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
